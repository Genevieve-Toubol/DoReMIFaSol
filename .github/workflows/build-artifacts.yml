name: build-artifacts

on: push

jobs:
  build-artifacts:
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r-version: '3.6.3'}
          - {os: windows-latest, r-version: '4.0.0'}
          - {os: ubuntu-20.04, r-version: 'release'}
    runs-on:  ${{ matrix.config.os }}
    env:
      INSEE_APP_KEY: ${{ secrets.INSEE_APP_KEY }}
      INSEE_APP_SECRET: ${{ secrets.INSEE_APP_SECRET }}

    steps:
      - uses: actions/checkout@v2
      - name: Set up R ${{ matrix.config.r-version }}
        uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.config.r-version }}
      - name: Query dependencies
        run: |
          install.packages('remotes')
        shell: Rscript {0}
      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')l
      - name: Install dependencies
        run: |
          install.packages(c("rcmdcheck", "httpuv", "devtools"))
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}
      - name: Check
        run: rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "error")
        shell: Rscript {0}
      - name: Build source (Linux)
        if: runner.os == 'Linux'
        run: devtools::build(binary = FALSE)
        shell: Rscript {0}
      - name: Build windows binaries
        if: runner.os == 'Windows'
        run: devtools::build(binary == TRUE)
        